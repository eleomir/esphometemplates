# Board is a counterfeit chinese ESP32 S3 Zero (identical to Waveshare-branded one)
# Very similar to the Adafruit Feather ESP32 S3
# In all versions, the WS2812 RGB LED is controlled via pin GPIO21
# Looks like this conterfeit Waveshare version is:
# SRAM: 512KB
# ROM: 384KB
# Flash: 4MB (onboard)
# PSRAM: 2MB

esphome:
  name: fanhub-01
  friendly_name: fanhub-01

esp32:
  board: adafruit_feather_esp32s3
  framework:
    type: arduino

psram:
  mode: octal
  speed: 80MHz

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "cpIZV4ttWi1/l3PCBGDc1oj8GDQkQNWSYYqDl2DI/N8="

ota:
  - platform: esphome
    password: "2348f7357d9040953d776dcd55004b98"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: NONE

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Fanhub-01 Fallback Hotspot"
    password: "e4AbKjPW49ak"

captive_portal:

preferences:
  flash_write_interval: 1min

web_server:
  port: 80
  version: 3

button:
  - platform: restart
    name: "Reboot Device"
    id: button_restart
    icon: mdi:power-cycle
    entity_category: "diagnostic"

switch:
  - platform: gpio
    id: env_sensor_enable
    name: "Env. Sensor Enable"
    restore_mode: ALWAYS_ON
    pin:
      number: GPIO03
      inverted: true

i2c:
  scl: GPIO05
  sda: GPIO04
  scan: true
  frequency: 100kHz
  id: bus_a

sensor:

  - platform: wifi_signal
    name: "RSSI"
    id: sensor_rssi
    update_interval: 60s
    entity_category: "diagnostic"
    
  - platform: bmp280_i2c
    i2c_id: bus_a
    address: 0x76
    update_interval: 30s
    iir_filter: 4x
    temperature:
      name: "Airflow Temperature"
    pressure:
      name: "Atmospheric Pressure"

  - platform: pulse_counter
    id: fan_tacho_01
    name: "Fan 01 - Speed"
    pin: 
      number: GPIO12
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    accuracy_decimals: 0
    filters:
      - multiply: 0.5
    count_mode:
      rising_edge: INCREMENT
      falling_edge: DISABLE
    update_interval: 2s

  - platform: pulse_counter
    id: fan_tacho_02
    name: "Fan 02 - Speed"
    pin: 
      number: GPIO10
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    accuracy_decimals: 0
    filters:
      - multiply: 0.5
    count_mode:
      rising_edge: INCREMENT
      falling_edge: DISABLE
    update_interval: 2s

  - platform: pulse_counter
    id: fan_tacho_03
    name: "Fan 03 - Speed"
    pin: 
      number: GPIO09
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    accuracy_decimals: 0
    filters:
      - multiply: 0.5
    count_mode:
      rising_edge: INCREMENT
      falling_edge: DISABLE
    update_interval: 2s

  - platform: pulse_counter
    id: fan_tacho_04
    name: "Fan 04 - Speed"
    pin: 
      number: GPIO07
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    accuracy_decimals: 0
    filters:
      - multiply: 0.5
    count_mode:
      rising_edge: INCREMENT
      falling_edge: DISABLE
    update_interval: 2s

fan:
  - platform: speed
    id: fan_control_01
    name: "Fan 01 - Control"
    output: fan_pwm_01
    restore_mode: RESTORE_DEFAULT_ON

  - platform: speed
    id: fan_control_02
    name: "Fan 02 - Control"
    output: fan_pwm_02
    restore_mode: RESTORE_DEFAULT_ON

  - platform: speed
    id: fan_control_03
    name: "Fan 03 - Control"
    output: fan_pwm_03
    restore_mode: RESTORE_DEFAULT_ON

  - platform: speed
    id: fan_control_04
    name: "Fan 04 - Control"
    output: fan_pwm_04
    restore_mode: RESTORE_DEFAULT_ON

output:
  - platform: ledc
    id: fan_pwm_01
    channel: 0
    pin: GPIO13
    frequency: 25000Hz

  - platform: ledc
    id: fan_pwm_02
    channel: 2
    pin: GPIO11
    frequency: 25000Hz

  - platform: ledc
    id: fan_pwm_03
    channel: 4
    pin: GPIO08
    frequency: 25000Hz

  - platform: ledc
    id: fan_pwm_04
    channel: 6
    pin: GPIO06
    frequency: 25000Hz